getwd()
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
packageStatus()
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
library(httr)
install.packages("httr")
help(httr)
??httr
GetDataSet <- function() {
## Verifiy data dir exists and data files are present.
if (!file.exists("data")) {
dir.create("data")
}
if (!file.exists(dataset.2016_splits)) {
download.file(dataset.2016_splits_url, dataset.2016_splits, method = "curl")
}
}
source('~/Working/R/vt100/GetDataSets.R')
GetDataSet()
GetDataSet()
install.packages("htmlTable")
??htmltables
install.packages("htmltab")
??htmltab
library(htmltab)
2016_splits <- htmltab(doc = dataset.2016_splits)
??htmltab
dataset.2016_splits
2016_splits <- htmltab(dataset.2016_splits)
2016_splits <- htmltab("data/2016_splits.html")
file()
??file
open(dataset.2016_splits)
class(dataset.2016_splits)
??htmltab
htmltab(doc = dataset.2016_splits)
htmltab(doc = dataset.2016_splits, which = "//h3[text() = '100M Splits'/table")
htmltab(doc = dataset.2016_splits, which = "//h3[text() = '100M Splits']/table")
htmltab(doc = dataset.2016_splits, which = "//h3[text() = '100M Splits']/following-sibling::table")
history
splits_2016_raw <- htmltab(doc = dataset.2016_splits, which = "//h3[text() = '100M Splits']/following-sibling::table")
View(splits_2016_raw)
source('~/Working/R/vt100/GetDataSets.R')
View(GetDataSet)
available.packages()
??available.packages
installed.packages()
source('~/Working/R/vt100/GetDataSets.R')
GetDataSets()
GetDataSets()
View(splits_2016_raw)
GetDataSets()
source('~/Working/R/vt100/GetDataSets.R')
c(1,2)
unclass(c(1,2))
dir(c(1,2))
class(c(1,2))
c(1,2)[0]
c(1,2)
c(1,2)[1]
c(1,2)[2]
c("foo", "bar")
l <- list(c("foo", "bar"), c("fooz", "barz"))
l[1]
l[1][1]
l[[1]]
l[2]
l[1]
l[1,]
l[1,1]
l <- list(c("http", "foo"))
l[[0]]
l[[1]]
l[1]
l[[1]][1]
l[[1]][2]
lapply(l, print)
??lapply
??apply
for(x in l) { print x }
for (x in l)
print x
for (x in l)
print(x)
print(x[1])
print(x[2])
source('~/Working/R/vt100/GetDataSets.R')
source('~/Working/R/vt100/GetDataSets.R')
GetDataSets()
source('~/Working/R/vt100/ReadTables.R')
View(splits_2016_raw)
??htmltab
View(splits_2016_raw)
source('~/Working/R/vt100/ReadTables.R')
source('~/Working/R/vt100/ReadTables.R')
fp <- file.path("data", "2016_splits.html")
splits_2016_raw <- htmltab(doc = fp, which = "//h3[text() = '100M Splits']/following-sibling::table")
fp <- file.path("data", "2015_splits.html")
splits_2015_raw <- htmltab(doc = fp, which = "//h3[text() = '100 Mile Splits']/following-sibling::table")
View(splits_2015_raw)
View(splits_2016_raw)
View(splits_2016_raw)
View(splits_2015_raw)
View(splits_2016_raw)
library(XML)
??htmlTreeParse
htmlParse("data/2015_final.html")
h <- htmlParse("data/2015_final.html")
h
class(h)
getNodeSet(h, "//body")
getNodeSet(h, "//pre")
getNodeSet(h, "//pre").text()
n <- getNodeSet(h, "//pre").text()
n <- getNodeSet(h, "//pre")
class(n)
??n
class(n)
??XMLNodeSet
??`XMLNode-class`
n[[1]]
n[[1]].test
n[[1]].text
n[[1]]
name(n[[1]])
dir(xml())
print(n)
print(n[[1]])
xmlName(n[[1]])
xmlValue(n)
xmlValue(n[[1]])
lenght(xmlValue(n[[1]]))
length(xmlValue(n[[1]]))
class(xmlValue(n[[1]]))
t <- xmlValue([[1]])
t <- xmlValue(n[[1]])
strsplit(t, '\n')
l <- strsplit(t, '\n')
l[10]
l[[10]]
l
class(l)
l[[10]]
l[[1]]
l[10]
l[[230]]
length(l)
??strsplit
nchar(t)
nchar(l)
nchar(n)
l[[1]][1]
l[[1]][2]
class(l[[1]][2])
class(l)
class(l[[1]])
list()
list(l[[1]])
x <- list(l[[1]])
x as.list(l[[1]])
x <- as.list(l[[1]])
savehistory("~/Working/R/vt100/history.Rhistory")
